@using System.Web.Mvc.Html
@using MVCSmartHouse.ViewModels.AdaptInterfacies;
@using SimpleSmartHouse1._0

@model IDictionary<int, Device>
@{
    Layout = null;
}
<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <link href="@Url.Content("~/Content/Site.css")" rel="stylesheet" type="text/css" />
    <title>Smart House</title>
</head>
<body>
    @using (Html.BeginForm("Add", "SmartHouse"))
    {
        @Html.DropDownList("device", (IEnumerable<SelectListItem>)ViewBag.DeviceList, new { @class = "dropDownDeviceList" })
        <input type="submit" value="Add" class="button" />
        <br />
        foreach (var item in Model)
        {
            <div class="device-div">
                <div class="conditionRow">
                    Device: @item.Value.Name
                    <br />
                    @item.Value.ToString()
                    <br />
                </div>
                <span>@Html.ActionLink("On", "MainFunc", new { id = item.Key, command = "On" }, new { @class = "button" })</span><!-- ON -->
                <span>@Html.ActionLink("Off", "MainFunc", new { id = item.Key, command = "Off" }, new { @class = "button" })</span><!-- OFF -->
                <span>@Html.ActionLink("Del", "MainFunc", new { id = item.Key, command = "Del" }, new { @class = "button" })</span><!-- DEL -->
                <br />
                @if (item.Value is IHandSetTempWarmAble)//Heater
                    {
                        if (item.Value.State == true)
                        {
                        <img src="~/Content/image/RadiatorOn.png" class="img" alt="Radiator On">
                    }
                    else
                    {
                        <img src="~/Content/image/RadiatorOff.png" class="img" alt="Radiator Off">
                    }
                }

                else if (item.Value is IHandSetTempColdAble)//AC
                {
                    if (item.Value.State == true)
                    {
                        <img src="~/Content/image/onAC.png" class="img" alt="Heater On">
                    }
                    else
                    {
                        <img src="~/Content/image/offAC.png" class="img" alt="Heater Off">
                    }
                }

                else if (item.Value is IlluminatorModeAble)//lamp
                {
                    if (item.Value.State == true)
                    {
                        <img src="~/Content/image/onLamp.png" class="img" alt="Lamp On">
                    }
                    else
                    {
                        <img src="~/Content/image/offLamp.png" class="img" alt="Lamp Off">
                    }
                }

                else if (item.Value is IHandSetRadioChannelAble)//Radio
                {
                    if (item.Value.State == true)
                    {
                        <img src="~/Content/image/RadioOn.png" class="img" alt="Radio On">
                    }
                    else
                    {
                        <img src="~/Content/image/RadioOff.png" class="img" alt="Radio Off">
                    }
                }

                else if (item.Value is IHandSetTVChannelAble)//TV
                {
                    if (item.Value.State == true)
                    {
                        <img src="~/Content/image/TVon.png" class="img" alt="TV On">
                    }
                    else
                    {
                        <img src="~/Content/image/TVoff.png" class="img" alt="TV Off">
                    }
                }
                <br />

                @if (item.Value is IHandSetTempWarmAble)
                {
                    <input type="submit" id="@item.Key" formaction="SetHeatTemperature/@item.Key" class="button" value="Set temperature" />
                    @Html.TextBox("warmTemper", Session["warmTemper"], new { id = "warmTemper" + item.Key, size = "3" })
                    <br />
                    <br />
                }

                @if (item.Value is IHandSetTempColdAble)
                {
                    <input type="submit" id="@item.Key" formaction="SetColdTemperature/@item.Key" class="button" value="Set temperature" />
                    @Html.TextBox("coldTemper", Session["coldTemper"], new { id = "coldTemper" + item.Key, size = "3" })
                    <br />
                    <br />
                }

                @if (item.Value is IIncDecTemperatureAble)
                {
                    @Html.ActionLink("Temp +", "MainFunc", new { id = item.Key, command = "IncTemp" }, new { @class = "button" })
                    @Html.ActionLink("Temp -", "MainFunc", new { id = item.Key, command = "DecTemp" }, new { @class = "button" })
                    <br />
                    <br />
                }


                @if (item.Value is IMultimediaBrightAble)
                {
                    <input type="submit" id="@item.Key" formaction="SetBrightMode/@item.Key" class="button" value="Set bright" />
                    @Html.DropDownList("brightMode", new SelectList(new[] {BrightnessLevel.Bright.ToString(),BrightnessLevel.Medium.ToString(),
                                        BrightnessLevel.Low.ToString(),BrightnessLevel.Default.ToString()}),
                          (string)Session["BrightMode"], new { id = "brightMode" + item.Key, @class = "dropDownDeviceList" })
                    <br />
                }

                @if (item.Value is IHandSetTVVolumeAble)
                {
                    <input type="submit" id="@item.Key" formaction="SetTVVolume/@item.Key" class="button" value="Set Volume" />
                    @Html.TextBox("tvVolume", Session["tvVolume"], new { id = "tvVolume" + item.Key, size = "3" })
                    <br />
                    <br />
                }

                @if (item.Value is IHandSetRadioVolumeAble)
                    {
                    <input type="submit" id="@item.Key" formaction="SetRadioVolume/@item.Key" class="button" value="Set Volume" />
                    @Html.TextBox("rVolume", Session["rVolume"], new { id = "rVolume" + item.Key, size = "3" })
                    <br />
                    <br />
                }

                @if (item.Value is IIncDecVolumeAble)
                    {
                    @Html.ActionLink("Volume +", "MainFunc", new { id = item.Key, command = "IncVol" }, new { @class = "button" })<!-- IncreaseVolume -->
                    @Html.ActionLink("Volume -", "MainFunc", new { id = item.Key, command = "DecVol" }, new { @class = "button" })<!-- DecreaseVolume -->
                    <br />
                    <br />
                }


                @if (item.Value is IHandSetTVChannelAble)
                    {
                    <input type="submit" id="@item.Key" formaction="SetTVChannel/@item.Key" class="button" value="Set Channel" /><!--  -->
                    @Html.TextBox("tvChannel", Session["Channel"], new { id = "tvChannel" + item.Key, size = "3" })
                    <br />
                    <br />
                }

                @if (item.Value is IHandSetRadioChannelAble)
                {
                    <input type="submit" id="@item.Key" formaction="SetRadioChannel/@item.Key" class="button" value="Set Channel" /><!--  -->
                    @Html.TextBox("rChannel", Session["rChannel"], new { id = "rChannel" + item.Key, size = "3" })
                    <br />
                    <br />
                }

                @if (item.Value is IIncDecChannelAble)
                    {
                    @Html.ActionLink("Channel +", "MainFunc", new { id = item.Key, command = "IncCh" }, new { @class = "button" })
                    @Html.ActionLink("Channel -", "MainFunc", new { id = item.Key, command = "DecCh" }, new { @class = "button" })
                    <br />
                    <br />
                }

                @if (item.Value is IShowLoadListAble)
                    {
                    @Html.ActionLink("Load Chann List", "MainFunc", new { id = item.Key, command = "LoadChan" }, new { @class = "button" })
                    <br />
                    <br />
                    @Html.ActionLink("Show Chann list", "MainFunc", new { id = item.Key, command = "ShowChan" }, new { @class = "button" })
                    @Html.ActionLink("Hide Chann list", "MainFunc", new { id = item.Key, command = "HideChan" }, new { @class = "button" })
                    <br />
                    <br />
                    if (item.Value.Name == "TV")
                    {
                        @Html.TextArea("TVlist" + @item.Key, (string)Session["TVList"], new { id = item.Key, @class = "textAreaList" });
                    }
                    if (item.Value.Name == "Radio")
                    {
                        @Html.TextArea("Radiolist" + @item.Key, (string)Session["RadioList"], new { id = item.Key, @class = "textAreaList" });
                    }
                }

                @if (item.Value is IWarmModeAble)
                {
                    @Html.DropDownList("warmMode", new SelectList(new[] { Mode.Turbo.ToString(), Mode.Eco.ToString(), Mode.Low.ToString(), Mode.Auto.ToString() }),
                                                (string)Session["wMode"], new { id = "wMode" + item.Key, @class = "dropDownDeviceList" })
                    <input type="submit" id="@item.Key" formaction="SetWarmMode/@item.Key" class="button" value="Set Warm Mode" />
                }

                @if (item.Value is IColdModeAble)
                {
                    @Html.DropDownList("coldMode", new SelectList(new[] { Mode.Turbo.ToString(), Mode.Eco.ToString(), Mode.Low.ToString(), Mode.Auto.ToString() }),
                                    (string)Session["cMode"], new { id = "cMode" + item.Key, @class = "dropDownDeviceList" })
                    <input type="submit" id="@item.Key" formaction="SetColdMode/@item.Key" class="button" value="Set Cold Mode" />
                }

                @if (item.Value is IlluminatorModeAble)
                {
                    @Html.DropDownList("ill", new SelectList(new[] {IlluminatorBrightness.BrightWhite.ToString(), IlluminatorBrightness.Daylight.ToString(),
                           IlluminatorBrightness.WarmWhite.ToString(),IlluminatorBrightness.Default.ToString()}),
                           (string)Session["illBright"], new { id = "illBright" + item.Key, @class = "dropDownDeviceList" })
                    <input type="submit" id="@item.Key" formaction="SetIlluminatorBright/@item.Key" class="button" value="Set bright" />
                }
            </div>
        }
    }
</body>
</html>